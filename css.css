/*I design webpages for ~240px devices first, and work my way up to larger devices in media queries*/

/*240px is the width of the slim screen on the back of the Galaxy Fold, and is the smallest consumer device I know of*/

/*As this webpage is built with flex, var(), and calc() it's not compatible with <IE10 or Opera Mini*/
:root {
background: #404040;
color: #f0f0f0;
font-family: 'Open Sans', sans-serif;
font-weight: 300;
font-size: 16px;
display: flex;
flex-direction: column;
align-items: center;
overflow-x: hidden;
--body-width: 97.5vw;
--body-margin: 0 calc( (100vw - var(--body-width)) / 2) 0 calc( (100vw - var(--body-width)) / 2);
}

body {
margin: var(--body-margin);
padding: 0;
}

#socials {
text-align: center;
font-size: 2rem;
margin: 2rem;
}

#socials a {
text-decoration: none;
color: #f0f0f0;
}

i {
	margin: 0.5rem;
	}
	
#intro {
display: flex;
flex-direction: column;
align-items: center;
margin-bottom: 2.5rem;
}

#selfie {
border-radius: 100%;
width: 200px;
}

#text-stack {
display: flex;
flex-direction: column;
align-items: center;
width: 85%;
}

#intro h1 {
font-size: 2rem;
font-weight: 300;
margin: 1.75rem 0 0.5rem 0;
}

#intro p {
text-align: center;
font-size: 1rem;
margin: 0;
}

#card-row{
display: flex;
flex-direction: column;
align-items: center;
}

.subcard{
display: flex;
flex-direction: column;
align-items: flex-start;
margin: 0 0 7.5px 0;
padding: 15px 20px 25px 20px;
background: #808080;
}

h3 {
font-size: 1.3rem;
font-weight: 300;
text-align: center;
margin: 0 0 1rem 0;
}

.subcard h3 {
text-align: left;
margin: 0 0 0.75rem 0;
}

.subcard li {
list-style: none;
margin:  0 0.125rem 0.75rem;
}

.showcase {
display: flex;
flex-direction: column;
align-items: center;
text-align: center;
margin: 0 0 1.5rem 0;
}

h2 {
font-size: 1.75rem;
font-weight: 300;
text-align: center;
margin:3rem 0 1.5rem 0;
}

.project-image {
max-width: calc( var(--body-width) * 0.95);
}

footer {
text-align: center;
margin-top: 3rem;
}

/*Media queries are often structured as a list of target devices but I prefer to design/test them with responsive breakpoints
as CSS heights vary wildly from actual device width for small HiDPI devices like phones.*/

/*I still keep devices sizes in mind when writing queries, and have commented out the kinds of devices that might use each
listed resolution*/ 

/*Break for small tablets - first layout change*/
@media (min-width: 600px) {

#socials {
display: flex;
justify-content: flex-end;
}

#intro {
flex-direction: row;
justify-content: space-around;
margin-top: 1rem;
}

#text-stack {
width: 60%;
margin-top: -60px;
}
}

/*Break for small laptops / desktops / larger tablets - second layout change*/
@media (min-width: 1000px) {

#selfie {
width: 225px;
}

#text-stack {
margin-top: -70px;
}

.card-row {
display: flex;
flex-direction: row;
}

.subcard {
flex: 1;
margin: 5px 2.5px 0 2.5px;
}

h2 {
margin-top: 4rem;
}
}

@media (min-width: 1100px) {
:root {
--body-width: 85vw;
}
}

/*Break for 1280-1366 devices*/
@media (min-width: 1225px) {

:root {
font-size: 18px;
}

#selfie {
width: 275px;
}

#intro {
margin-top: 3rem;
}

}

/*Break for everything up to 1920*/
@media (min-width: 1500px) {

:root {
font-size: 20px;
}
}

/*Break for HiDPI monitors (2K +)*/
@media (min-width: 2050px) {

:root {
font-size: 22px;
--body-width: 65vw;
}

.project-image {
max-width: calc( var(--body-width) * 0.7);
}

.card-row {
margin-top: 4rem;
}

.showcase {
margin: 0 0 2.5rem 0;
}
}

/*Break for 4K monitors*/

@media (min-width: 3400px) {

:root {
font-size: 24px;
--body-width: 1700px;	
/*for ultra-widescreen devices you could write min(), max(), or clamp() functions but I find setting
a single width beyond 16:9 aspect rations makes for a better user experience - same with large HiDPI displays*/
}



